---
import { cn } from '../utils/utils';

interface Props {
  class?: string;
  externalLink?: boolean;
  href: string;
  id?: string;
  size?: 'default' | 'sm' | 'lg' | 'icon';
  variant?:
    | 'default'
    | 'destructive'
    | 'ghost'
    | 'outline'
    | 'primary'
    | 'secondary'
    | 'success'
    | 'warning';
}

const {
  variant = 'default',
  size = 'default',
  href,
  externalLink = false,
  class: className,
  id,
  ...props
} = Astro.props;

const linkVariants = {
  base: 'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 rounded-lg cursor-pointer',
  variant: {
    default: 'text-muted-foreground underline underline-offset-4 hover:text-foreground',
    primary: 'bg-primary text-primary-foreground hover:bg-primary/90 shadow-sm',
    destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-sm',
    warning: 'bg-warning text-warning-foreground hover:bg-warning/90 shadow-sm',
    success: 'bg-success text-success-foreground hover:bg-success/90 shadow-sm',
    outline:
      'border shadow-sm border-border bg-background hover:bg-secondary hover:text-foreground',
    secondary: 'bg-secondary shadow-sm text-secondary-foreground hover:bg-secondary/90',
    ghost: 'hover:bg-accent text-foreground',
  },
  size: {
    default: '',
    primary: 'h-9 px-4 py-2',
    sm: 'h-8 rounded-md px-3 text-xs',
    lg: 'h-10 rounded-md px-8',
    icon: 'h-9 w-9',
  },
};
---

<a
  id={id}
  href={href}
  class={cn(linkVariants.base, linkVariants.variant[variant], linkVariants.size[size], className)}
  {...externalLink && { target: '_blank', rel: 'noopener noreferrer' }}
  {...props}
>
  <slot />
</a>
