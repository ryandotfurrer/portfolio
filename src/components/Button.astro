---
import clsx from 'clsx';

interface Props {
  variant?:
    | 'default'
    | 'destructive'
    | 'warning'
    | 'success'
    | 'outline'
    | 'secondary'
    | 'ghost'
    | 'link';
  size?: 'default' | 'sm' | 'lg' | 'icon';
  class?: string;
}

const { variant = 'default', size = 'default', class: className, ...props } = Astro.props;

const buttonVariants = {
  base: 'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-semibold transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 rounded-lg cursor-pointer',
  variant: {
    default: 'bg-primary text-primary-foreground hover:bg-primary/90 shadow-sm',
    destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-sm',
    warning: 'bg-warning text-warning-foreground hover:bg-warning/90 shadow-sm',
    success: 'bg-success text-success-foreground hover:bg-success/90 shadow-sm',
    outline:
      'border shadow-sm border-border bg-background hover:bg-secondary hover:text-foreground',
    secondary: 'bg-secondary shadow-sm text-secondary-foreground hover:bg-secondary/90',
    ghost: 'hover:bg-accent text-foreground',
    link: 'text-primary underline-offset-4 hover:underline',
  },
  size: {
    default: 'h-9 px-4 py-2',
    sm: 'h-8 rounded-md px-3 text-xs',
    lg: 'h-10 rounded-md px-8',
    icon: 'h-9 w-9',
  },
};
---

<button
  class={clsx(
    buttonVariants.base,
    buttonVariants.variant[variant],
    buttonVariants.size[size],
    className
  )}
  {...props}
>
  <slot />
</button>
